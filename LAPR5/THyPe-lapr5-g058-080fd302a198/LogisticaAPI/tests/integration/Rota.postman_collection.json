{
	"info": {
		"_postman_id": "4d8500c8-fbed-4f68-9f30-f788ac36bdf0",
		"name": "Rota",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23425355"
	},
	"item": [
		{
			"name": "Rota GET",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Get all routes\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].id).to.eql(1);\r",
							"    pm.expect(jsonData[1].id).to.eql(2);\r",
							"    pm.expect(jsonData[2].id).to.eql(3);\r",
							"    pm.expect(jsonData[3].id).to.eql(4);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3001/api/rota",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"api",
						"rota"
					]
				}
			},
			"response": []
		},
		{
			"name": "Rota GET by Armazém Origem",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Get all routes with the same origin\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].id).to.eql(1);\r",
							"    pm.expect(jsonData[1].id).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"armazemOrigem\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/api/rota",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"api",
						"rota"
					]
				}
			},
			"response": []
		},
		{
			"name": "Rota GET by Armazém Destino",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Get all routes with the same destination\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].id).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"armazemDestino\": 3\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/api/rota",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"api",
						"rota"
					]
				}
			},
			"response": []
		},
		{
			"name": "Rota GET by Armazém Origem e Destino",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Get the right route using the origin and destination\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].id).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"armazemOrigem\": 1,\r\n    \"armazemDestino\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/api/rota",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"api",
						"rota"
					]
				}
			},
			"response": []
		},
		{
			"name": "Rota POST",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Test attributes\r",
							"pm.test(\"Test distance\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.distancia).to.eql(60);\r",
							"});\r",
							"\r",
							"pm.test(\"Test origin\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.armazemOrigem).to.eql(3);\r",
							"});\r",
							"\r",
							"pm.test(\"Test destination\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.armazemDestino).to.eql(5);\r",
							"});\r",
							"\r",
							"pm.test(\"Test travel time\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.tempoPercorrer).to.eql(60);\r",
							"});\r",
							"\r",
							"pm.test(\"Test loading time\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.tempoCarregamento).to.eql(1);\r",
							"});\r",
							"\r",
							"pm.test(\"Test extra charging time\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.tempoCarregamentoExtra).to.eql(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\":4,\r\n    \"distancia\":60,\r\n    \"armazemOrigem\":3,\r\n    \"armazemDestino\":5,\r\n    \"tempoPercorrer\":60,\r\n    \"tempoCarregamento\":1,\r\n    \"tempoCarregamentoExtra\":0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/api/rota",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"api",
						"rota"
					]
				}
			},
			"response": []
		},
		{
			"name": "Rota PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Successful PUT request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Update route and return json\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"    pm.expect(jsonData.distancia).to.eql(20);\r",
							"    pm.expect(jsonData.armazemOrigem).to.eql(1);\r",
							"    pm.expect(jsonData.armazemDestino).to.eql(2);\r",
							"    pm.expect(jsonData.tempoPercorrer).to.eql(30);\r",
							"    pm.expect(jsonData.tempoCarregamento).to.eql(2);\r",
							"    pm.expect(jsonData.tempoCarregamentoExtra).to.eql(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"armazemOrigem\": 1,\r\n    \"armazemDestino\": 2,\r\n    \"tempoCarregamento\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/api/rota",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"api",
						"rota"
					]
				}
			},
			"response": []
		}
	]
}